<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://xmlns.jcp.org/xml/ns/javaee" xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd" id="WebApp_ID" version="3.1">
  <display-name>Jersey Raml Web App</display-name>
  <welcome-file-list>
    <welcome-file>index.html</welcome-file>
    <welcome-file>index.htm</welcome-file>
    <welcome-file>index.jsp</welcome-file>
    <welcome-file>default.html</welcome-file>
    <welcome-file>default.htm</welcome-file>
    <welcome-file>default.jsp</welcome-file>
  </welcome-file-list>
  <servlet>
		<servlet-name>jersey-servlet</servlet-name>
	    <servlet-class>
             org.glassfish.jersey.servlet.ServletContainer
        </servlet-class>
 		<init-param>
		     <param-name>jersey.config.server.provider.packages</param-name>
		     <param-value>com.bandi.rest</param-value>
		</init-param>
		<init-param>
		  <param-name>jersey.config.server.provider.classnames</param-name>
		  <param-value>
		  		org.glassfish.jersey.media.multipart.MultiPartFeature;com.bandi.jacksonconfig.JacksonFeature;org.glassfish.jersey.server.mvc.jsp.JspMvcFeature;org.glassfish.jersey.filter.LoggingFilter
		  		<!-- For Viewable to work, you need to use 
		  		
		  		org.glassfish.jersey.jackson.JacksonFeature;org.glassfish.jersey.server.mvc.jsp.JspMvcFeature
		  		
		  		 -->
		  </param-value>
		</init-param>
	    <init-param>
	        <param-name>jersey.config.servlet.filter.staticContentRegex</param-name>
	        <param-value>/(decorators|scripts|styles|resources|(WEB-INF/))/.*</param-value>
	    </init-param>
	    <init-param>
            <param-name>jersey.config.server.tracing</param-name>
            <param-value>ALL</param-value>
        </init-param> 
	    <init-param>
		    <param-name>javax.ws.rs.Application</param-name>
		    <param-value>com.bandi.rest.configuration.JerseyApplicationConfig</param-value>
		</init-param>
<!-- 
		<servlet-class>
             com.sun.jersey.spi.container.servlet.ServletContainer
        </servlet-class>
		<init-param>
		     <param-name>com.sun.jersey.config.property.packages</param-name>
		     <param-value>com.bandi.rest</param-value>
		</init-param>
		<init-param>
			<param-name>com.sun.jersey.api.json.POJOMappingFeature</param-name>
			<param-value>true</param-value>
		</init-param>
	    <init-param>
	        <param-name>com.sun.jersey.config.property.WebPageContentRegex</param-name>
	        <param-value>/(decorators|scripts|styles|resources|(WEB-INF/))/.*</param-value>
	    </init-param>
 -->
		
		<load-on-startup>1</load-on-startup>
	</servlet>

	<servlet-mapping>
		<servlet-name>jersey-servlet</servlet-name>
		<url-pattern>/rest/*</url-pattern>
	</servlet-mapping>

	<servlet-mapping>
		<servlet-name>jersey-servlet</servlet-name>
		<url-pattern>*.json</url-pattern>
	</servlet-mapping>

	 <listener>
		<listener-class>
			org.springframework.web.context.ContextLoaderListener
		</listener-class>
	</listener> 
	
	
	<!-- There are 3 ways to specify how the spring configuration needs to be loaded -->
	<!-- 1: Using AbstractAnnotationConfigDispatcherServletInitializer defined in commented portion of SpringInitializer.java -->
	<!-- 2: Using contextConfigLocation commented below -->
	<!-- 3: Defining locatorFactorySelector where locations property will be defined. -->
<!-- 
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>classpath:applicationContext.xml</param-value>
	</context-param>
	 -->
 
	 <servlet>
		<servlet-name>dispatcher</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<init-param>
	        <param-name>contextClass</param-name>
	        <param-value>org.springframework.web.context.support.AnnotationConfigWebApplicationContext</param-value>
	    </init-param>
		<load-on-startup>2</load-on-startup>
	</servlet>

	<servlet-mapping>
		<servlet-name>dispatcher</servlet-name>
		<url-pattern>/dispatcherPath/*</url-pattern>
	</servlet-mapping>
  
<!-- 	<context-param>
		<param-name>locatorFactorySelector</param-name>
		<param-value>
			classpath*:/spring/factories.xml
		</param-value>
	</context-param>
 -->
	<!-- <context-param>
		<param-name>parentContextKey</param-name>
		<param-value>myShareSpringContext</param-value>
	</context-param> -->
	
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>
			/WEB-INF/applicationContext.xml
		</param-value>
	</context-param>
	  
</web-app>
